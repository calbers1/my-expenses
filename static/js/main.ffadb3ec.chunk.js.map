{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","onExpenseFilterSet","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFill","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartData","expenses","getMonth","Expenses","useState","filterValue","setFilterValue","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onNewExpenseSubmit","type","required","min","step","onclick","cancel","NewExpense","numberOfExpenses","expenseBtnPressed","setExpenseBtnPressed","displayItem","onClick","enteredExpenseData","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffadb3ec.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"Card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const changeHandler = (event) => {\r\n    props.onExpenseFilterSet(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={changeHandler} value={props.selected}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import Card from \"../UI/Card\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <Card className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n        </div>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h3 className=\"expenses-list__fallback\">\r\n        No Expenses Found For The Specified Period.\r\n      </h3>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { render } from \"@testing-library/react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFill = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFill = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: barFill }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import { render } from \"@testing-library/react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartData = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartData[expenseMonth].value += expense.amount;\r\n  }\r\n  if (props.expenses.length === 0) {\r\n    return \"\";\r\n  }\r\n  return <Chart dataPoints={chartData}></Chart>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filterValue, setFilterValue] = useState(\"2021\");\r\n\r\n  const expenseFilterHandler = (filter) => {\r\n    setFilterValue(filter);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filterValue;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filterValue}\r\n          onExpenseFilterSet={expenseFilterHandler}\r\n        ></ExpensesFilter>\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses}></ExpensesList>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react/cjs/react.development\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate + \"CST\"),\r\n    };\r\n    props.onNewExpenseSubmit(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredAmount(\"\");\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    setEnteredTitle(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredAmount(\"\");\r\n    props.cancel();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            required={true}\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.00\"\r\n            step=\"0.01\"\r\n            required={true}\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"01-01-2019\"\r\n            max=\"12-31-2022\"\r\n            value={enteredDate}\r\n            required={true}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onclick={cancelHandler}>Cancel</button>\r\n        <button type=\"submit\">Submit Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nconst NewExpense = (props) => {\r\n  const numberOfExpenses = props.numberOfExpenses + 1;\r\n  const [expenseBtnPressed, setExpenseBtnPressed] = useState(false);\r\n\r\n  const submitExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      id: \"e\" + numberOfExpenses,\r\n      ...enteredExpenseData,\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setExpenseBtnPressed(false);\r\n  };\r\n\r\n  const cancelExpenseHandler = () => {\r\n    setExpenseBtnPressed(false);\r\n  };\r\n\r\n  const displayBtnClickHandler = () => {\r\n    setExpenseBtnPressed(true);\r\n  };\r\n\r\n  let displayItem = (\r\n    <button onClick={displayBtnClickHandler}>Create Expense</button>\r\n  );\r\n\r\n  if (expenseBtnPressed) {\r\n    displayItem = (\r\n      <ExpenseForm\r\n        onNewExpenseSubmit={submitExpenseDataHandler}\r\n        cancel={cancelExpenseHandler}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <Card className=\"new-expense\">{displayItem}</Card>;\r\n};\r\n\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\nimport { React, useState } from \"react\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"New TV\",\r\n    amount: 799.49,\r\n    date: new Date(2021, 2, 12),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = (props) => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense\r\n        onAddExpense={addExpenseHandler}\r\n        numberOfExpenses={expenses.length}\r\n      />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}